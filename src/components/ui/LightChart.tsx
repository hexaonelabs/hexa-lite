import { ColorType, IChartApi, createChart } from 'lightweight-charts';
import { useEffect, useRef } from 'react';

// Generated by https://quicktype.io

interface DataItem {
  time: string;
  value: number;
}

export default function LightChart(props: { data: DataItem[] }) {
  const chartContainerRef = useRef(null);
  const chartRef = useRef<IChartApi|null>(null);
  

  useEffect(() => {
    if (chartContainerRef.current) {
      // remove the chart if it already exists
      if (chartRef.current) {
        chartRef.current.remove();
        chartRef.current = null;
      }

      // create a new chart
      const chart = createChart(chartContainerRef.current, {
        width: 400, 
        height: 250,
        layout: {
          background: {
              type: ColorType.Solid,
                  color: 'transparent',
              },
          textColor: '#d1d4dc',
        },
        grid: {
          vertLines: {
            visible: false,
          },
          horzLines: {
            color: 'rgba(42, 46, 57, 0.5)',
          },
        },
        rightPriceScale: {
          borderVisible: false,
          visible: false,
        },
        timeScale: {
          borderVisible: false,
        },
        crosshair: {
          horzLine: {
            // visible: false,
            style: 4,
            
          },
        },
      });
      // const lineSeries = chart.addLineSeries();
      // lineSeries.setData(props.data);

      const series = chart.addAreaSeries({
        topColor: 'rgba(0,144,255, 0.618)',
        bottomColor: 'rgba(0,144,255, 0.01)',
        lineColor: 'rgba(0,144,255, 1)',
        lineWidth: 3,
      });
      series.setData(props.data);

      chart.timeScale().fitContent();
      
      // store the chart instance in the ref
      chartRef.current = chart;
    }
    // clean up the chart when the component is unmounted
    return () => {
      if (chartRef.current) {
        chartRef.current.remove();
        chartRef.current = null;
      }
    };
  }, [props.data]);

  return <div ref={chartContainerRef} />;
};

